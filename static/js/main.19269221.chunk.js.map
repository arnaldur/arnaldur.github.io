{"version":3,"sources":["components/RecipeName.jsx","components/TagList.jsx","components/RecipeList.jsx","components/RecipeDetail.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["RecipeName","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","name","sha","_this2","stored","localStorage","getItem","setState","fetch","then","res","text","result","arr","exec","length","setItem","match","tag_rx","tag2name","JSON","parse","tag","names","stringify","_this$state","React","Component","TagList","tags","stored_tag2name","t","react_default","a","createElement","map","item","i","className","key","react_router_dom","to","concat","RecipeList","isLoaded","items","active_filter","json","result_filtered","filter","x","endsWith","event","filterValue","target","value","render","message","filtered_items","toLowerCase","search","Container_default","Row_default","Col_default","components_TagList","FormControl_default","onChange","bind","placeholder","components_RecipeName","ReactMarkdown","require","RecipeDetail","data","file","e","setAttribute","console","log","recipe_image","replace","Image_default","fluid","src","onError","source","Index","components_RecipeList","RecipeDetailRoute","_ref","components_RecipeDetail","params","filename","AppRouter","basename","process","Navbar_default","bg","variant","Brand","href","alt","sigga_logo","width","height","react_router","path","exact","component","Boolean","window","location","hostname","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"2RA4EeA,cAzEb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,KACPC,KAAMV,EAAMU,KACZC,IAAKX,EAAMW,KALIV,mFASC,IAAAW,EAAAR,KACdS,EAASC,aAAaC,QAAQX,KAAKI,MAAMG,KAE1CE,EACDT,KAAKY,SAAS,CACZN,KAAMG,IAGRI,MAAM,iEAAmEb,KAAKI,MAAME,MACnFQ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACG,GAEC,IACIC,EADK,WACIC,KAAKF,GACdC,GAAOA,EAAIE,OAAS,IACtBZ,EAAKI,SAAS,CACXN,KAAMY,EAAI,KAEbR,aAAaW,QAAQb,EAAKJ,MAAMG,IAAKC,EAAKJ,MAAME,OASlD,IALA,IAIIgB,EAJAC,EAAS,uBAETC,EADkBC,KAAKC,MAAMhB,aAAaC,QAAQ,cACpB,GAG5BW,EAAQC,EAAOJ,KAAKF,IAAS,CACjC,IAAIU,EAAML,EAAM,GAIhB,GAAGK,EAAI,CACL,IAAIC,EAAQJ,EAASG,GACT,MAATC,IACDA,EAAQ,IAEVA,EAAMpB,EAAKJ,MAAME,OAAQ,EAEzBkB,EAASG,GAAOC,GAIpBlB,aAAaW,QAAQ,WAAYI,KAAKI,UAAUL,KAKlD,SAACnB,GACCG,EAAKI,SAAS,CACZP,6CAOD,IAAAyB,EACqB9B,KAAKI,MAAlBE,GADRwB,EACCzB,MADDyB,EACQxB,MADRwB,EACcvB,IACrB,OAAOD,SAtEcyB,IAAMC,WC0ChBC,cAxCb,SAAAA,EAAYrC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACjBpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,KACP6B,KAAM,MAJSrC,mFASjB,IAAIsC,EAAkBV,KAAKC,MAAMhB,aAAaC,QAAQ,aAClDuB,EAAO,GACX,IAAI,IAAIE,KAAKD,EACXD,EAAKA,EAAKd,QAAUgB,EAGtBpC,KAAKY,SAAS,CACZsB,KAAMA,qCAID,IAAAJ,EACiB9B,KAAKI,MADtB0B,EACCzB,MACR,OAFOyB,EACQI,KAGXG,EAAAC,EAAAC,cAAA,WACCvC,KAAKI,MAAM8B,KAAKM,IACf,SAACC,EAAKC,GAAN,OACEL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,OAAOC,IAAKF,GAC1BL,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAE,QAAAC,OAAUN,IAASA,OAO5BJ,EAAAC,EAAAC,cAAA,yBApCSR,IAAMC,WC+FbgB,cAvFb,SAAAA,EAAYpD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACjBnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,KACP4C,UAAU,EACVC,MAAO,GACPC,cAAe,MANAtD,mFAUC,IAAAW,EAAAR,KAClBa,MAAM,+DACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIqC,SAChBtC,KACC,SAACG,GACC,IAAMoC,EAAkBpC,EAAOqC,OAAO,SAACC,GAAD,OAAOA,EAAEjD,KAAKkD,SAAS,SAC7DhD,EAAKI,SAAS,CACZqC,UAAU,EACVC,MAAOG,KAMX,SAAChD,GACCG,EAAKI,SAAS,CACZqC,UAAU,EACV5C,6CAMDoD,GACP,IAAIC,EAAcD,EAAME,OAAOC,MAC/B5D,KAAKY,SAAS,CACZuC,cAAeO,IAEjB1D,KAAK6D,0CAGE,IAAA/B,EAC2C9B,KAAKI,MAA/CC,EADDyB,EACCzB,MAAO4C,EADRnB,EACQmB,SAAUC,EADlBpB,EACkBoB,MAAOC,EADzBrB,EACyBqB,cAChC,GAAI9C,EACF,OAAOgC,EAAAC,EAAAC,cAAA,qBAAalC,EAAMyD,SACrB,GAAKb,EAEL,CACL,IAAIc,EAAiBb,EAOrB,OALoB,MAAjBC,IACDY,EAAiBA,EAAeT,OAAO,SAASb,GAC9C,OAAwE,IAAjEA,EAAKnC,KAAK0D,cAAcC,OAAOd,EAAca,kBAIpD3B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAWK,UAAU,QACnBN,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAKK,UAAU,QACbN,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACED,EAAAC,EAAAC,cAAC8B,EAAD,QAGJhC,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAKK,UAAU,QACbN,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACED,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CACEiC,SAAUvE,KAAKuE,SAASC,KAAKxE,MAC7ByE,YAAY,WAIlBpC,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAKK,UAAU,QACbN,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACCyB,EAAevB,IAAI,SAAAC,GAAI,OACtBJ,EAAAC,EAAAC,cAAA,OAAKK,IAAKH,EAAKnC,MACb+B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAE,YAAAC,OAAcN,EAAKnC,OACzB+B,EAAAC,EAAAC,cAACmC,EAAD,CAAYnE,IAAKkC,EAAKlC,IAAKD,KAAMmC,EAAKnC,cA7BpD,OAAO+B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAWK,UAAU,QAAON,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KAAKD,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KAAKD,EAAAC,EAAAC,cAAA,mCA/C1BR,IAAMC,4BCJzB2C,EAAgBC,EAAQ,IA6DfC,cA1Db,SAAAA,EAAYjF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACjBhF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,KACP4C,UAAU,EACV6B,KAAM,IALSjF,mFASC,IAAAW,EAAAR,KAClBa,MAAM,iEAAmEb,KAAKJ,MAAMmF,MACjFjE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACG,GACCT,EAAKI,SAAS,CACZqC,UAAU,EACV6B,KAAM7D,KAMV,SAACZ,GACCG,EAAKI,SAAS,CACZqC,UAAU,EACV5C,4CAMF2E,GACNA,EAAErB,OAAOsB,aAAa,MAAO,qCAGtB,IAAAnD,EAC2B9B,KAAKI,MAA/BC,EADDyB,EACCzB,MAAO4C,EADRnB,EACQmB,SAAU6B,EADlBhD,EACkBgD,KAEzB,GADAI,QAAQC,IAAIL,GACRzE,EACF,OAAOgC,EAAAC,EAAAC,cAAA,qBAAalC,EAAMyD,SACrB,GAAKb,EAEL,CACL,IAAMmC,EAAe,iEAAmEpF,KAAKJ,MAAMmF,KAAKM,QAAQ,KAAM,OACtH,OACEhD,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAWK,UAAU,QACnBN,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KACED,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACED,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAOiD,OAAK,EAACC,IAAKJ,EAAcK,QAASzF,KAAKyF,UAC9CpD,EAAAC,EAAAC,cAACoC,EAAD,CAAee,OAAQZ,OAR/B,OAAOzC,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,KAAWD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KAAKD,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KAAKD,EAAAC,EAAAC,cAAA,mCA1CPR,IAAMC,4BCCjC,SAAS2D,IACP,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,CAAYtF,KAAK,UAG1B,SAASuF,EAATC,GAAoC,IAARxE,EAAQwE,EAARxE,MAC1B,OAAOe,EAAAC,EAAAC,cAACwD,EAAD,CAAchB,KAAMzD,EAAM0E,OAAOC,WA2B3BC,MAxBf,WACE,OACE7D,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQsD,SAAUC,IAChB/D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAQgE,GAAG,OAAOC,QAAQ,QACxBlE,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAOkE,MAAR,CAAcC,KAAK,KACjBpE,EAAAC,EAAAC,cAAA,OACEmE,IAAI,GACJlB,IAAKmB,IACLC,MAAM,KACNC,OAAO,KACPlE,UAAU,0CAEX,sBAILN,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWtB,IACjCtD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,KAAK,qBAAqBE,UAAWpB,OCvBhCqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/F,MACvB,2DCZNgG,IAASzD,OAAOxB,EAAAC,EAAAC,cAACgF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9G,KAAK,SAAA+G,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.19269221.chunk.js","sourcesContent":["import React from \"react\";\n\nclass RecipeName extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      name: props.name,\n      sha: props.sha\n    };\n  }\n\n  componentDidMount() {\n    var stored = localStorage.getItem(this.state.sha)\n\n    if(stored) {\n      this.setState({\n        name: stored\n      })\n    } else {\n      fetch(\"https://raw.githubusercontent.com/arnaldur/uppskriftir/master/\" + this.state.name)\n      .then(res => res.text())\n      .then(\n        (result) => {\n          // Extract titles\n          var rx = /# (.*)\\n/;\n          var arr = rx.exec(result);\n          if( arr && arr.length > 0 ){\n            this.setState({\n               name: arr[1]\n            });\n            localStorage.setItem(this.state.sha, this.state.name);\n          }\n\n          //extract tags\n          var tag_rx = /(^|\\s)(#[a-z\\d-]+)/ig;\n          var stored_tag2name = JSON.parse(localStorage.getItem(\"tag2name\"))\n          var tag2name = stored_tag2name || {};\n\n          var match;\n          while(match = tag_rx.exec(result)) {\n            var tag = match[2];\n\n            // If we found a tag we add the name of the recipe to the set\n            // belonging to that tag\n            if(tag){\n              var names = tag2name[tag];\n              if(names == null) {\n                names = {};\n              }\n              names[this.state.name] = true;\n              // Push the names back into the index\n              tag2name[tag] = names;\n            }\n          }\n\n          localStorage.setItem(\"tag2name\", JSON.stringify(tag2name));\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            error\n          });\n        }\n      )\n    }\n  }\n\n  render() {\n    const { error, name, sha} = this.state;\n    return name;\n  }\n}\n\nexport default RecipeName;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass TagList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      tags: null\n    };\n  }\n\n  componentDidMount() {\n    var stored_tag2name = JSON.parse(localStorage.getItem(\"tag2name\"))\n    var tags = [];\n    for(var t in stored_tag2name) {\n      tags[tags.length] = t;\n    }\n\n    this.setState({\n      tags: tags\n    });\n  }\n\n  render() {\n    const { error, tags } = this.state;\n    if(tags) {\n      return(\n        <div>\n        {this.state.tags.map(\n          (item,i) => (\n            <span className='mr-4' key={i}>\n              <Link to={`?tag=${item}`}>{item}</Link>\n            </span>\n          )\n        )}\n        </div>\n      );\n    } else {\n      return <div>...</div>;\n    }\n  }\n}\n\nexport default TagList;\n","import React from \"react\";\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport FormControl from 'react-bootstrap/FormControl'\nimport RecipeName from './RecipeName'\nimport TagList from './TagList'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nclass RecipeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      active_filter: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.github.com/repos/arnaldur/uppskriftir/contents/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          const result_filtered = result.filter((x) => x.name.endsWith(\".md\") )\n          this.setState({\n            isLoaded: true,\n            items: result_filtered\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  onChange(event) {\n    var filterValue = event.target.value;\n    this.setState({\n      active_filter: filterValue\n    });\n    this.render();\n  }\n\n  render() {\n    const { error, isLoaded, items, active_filter } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <Container className='mt-5'><Row><Col><div>Loading...</div></Col></Row></Container>;\n    } else {\n      var filtered_items = items;\n\n      if(active_filter != null) {\n        filtered_items = filtered_items.filter(function(item){\n          return item.name.toLowerCase().search(active_filter.toLowerCase()) !== -1;\n        });\n      }\n      return (\n          <Container className='mt-5'>\n            <Row className='mb-4'>\n              <Col>\n                <TagList/>\n              </Col>\n            </Row>\n            <Row className='mb-4'>\n              <Col>\n                <FormControl\n                  onChange={this.onChange.bind(this)}\n                  placeholder=\"Leit\"\n                />\n              </Col>\n            </Row>\n            <Row className='mb-4'>\n              <Col>\n              {filtered_items.map(item => (\n                <div key={item.name}>\n                  <Link to={`/recipes/${item.name}`}>\n                    <RecipeName sha={item.sha} name={item.name}/>\n                  </Link>\n                </div>\n              ))}\n              </Col>\n            </Row>\n          </Container>\n      );\n    }\n  }\n}\n\nexport default RecipeList;\n","import React from \"react\";\nimport Image from 'react-bootstrap/Image'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst ReactMarkdown = require('react-markdown')\n\nclass RecipeDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/arnaldur/uppskriftir/master/\" + this.props.file)\n      .then(res => res.text())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            data: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  onError(e) {\n    e.target.setAttribute(\"src\", \"\");\n  }\n\n  render() {\n    const { error, isLoaded, data } = this.state;\n    console.log(data);\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <Container><Row><Col><div>Loading...</div></Col></Row></Container>;\n    } else {\n      const recipe_image = \"https://raw.githubusercontent.com/arnaldur/uppskriftir/master/\" + this.props.file.replace(\"md\", \"jpg\");\n      return (\n        <Container className='mt-5'>\n          <Row>\n            <Col>\n              <Image fluid src={recipe_image} onError={this.onError}/>\n              <ReactMarkdown source={data} />\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default RecipeDetail;\n","import React from \"react\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport RecipeList from './components/RecipeList';\nimport RecipeDetail from './components/RecipeDetail';\n\nimport sigga_logo from './logo.svg'\n\nfunction Index() {\n  return <RecipeList name=\"Sigga\"/>\n}\n\nfunction RecipeDetailRoute({match}) {\n  return <RecipeDetail file={match.params.filename}/>\n}\n\nfunction AppRouter() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">\n            <img\n              alt=\"\"\n              src={sigga_logo}\n              width=\"50\"\n              height=\"50\"\n              className=\"ml-5 mr-3 d-inline-block align-center\"\n            />\n            {'  Eldhús Siggu'}\n          </Navbar.Brand>\n        </Navbar>\n\n        <Route path=\"/\" exact component={Index} />\n        <Route path=\"/recipes/:filename\" component={RecipeDetailRoute} />\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.7098ef04.svg\";"],"sourceRoot":""}